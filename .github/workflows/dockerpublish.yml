name: Docker

on:
  watch:
    types: [started]
    
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: spring-manage-user
  IMAGE_ID: andysteel  

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
          architecture: x64    
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.actor == github.event.repository.owner.login

    steps:
      - uses: actions/checkout@v2
        
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
          architecture: x64    
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Login into registry
        env:
          DOCKER_USER: $IMAGE_ID   
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        #run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
      
      - name: Push image
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID/$IMAGE_NAME
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID/$IMAGE_NAME:$VERSION
          docker push $IMAGE_ID/$IMAGE_NAME:$VERSION
